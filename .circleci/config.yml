version: 2.1

only_main: &only_main
  filters:
    branches:
      only:
        - main

commands:
  authenticate_npm:
    steps:
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

executors:
  pulumi:
    docker:
      - image: circleci/node:14

jobs:
  build:
    description: Build and Lint
    resource_class: xlarge
    executor: pulumi
    steps:
      - checkout
      - authenticate_npm
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - lib-{{ checksum "yarn.lock" }}
            - lib-
      - run:
          name: Install Packages
          command: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          key: lib-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Lint
          command: yarn lint --fix
      - run:
          name: Build Packages
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - .
  publish:
    description: Publish Packages to NPM
    resource_class: xlarge
    executor: pulumi
    steps:
      - checkout
      - authenticate_npm
      # add_ssh_keys step must come AFTER checkout otherwise it gets overwritten
      - add_ssh_keys:
          fingerprints:
            - '1c:10:b9:0a:d2:0e:58:ee:32:aa:45:f8:49:9a:0b:4a'
      - attach_workspace:
          at: ~/project
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - lib-{{ checksum "yarn.lock" }}
            - lib-
      - run:
          name: Install packages
          command: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - run:
          name: Set git user
          command: |
            git config --global -l
            git config --global user.name "CircleCI"
      - run:
          name: Cut Release
          command: npx lerna exec --concurrency 1 -- npx --no-install semantic-release -e semantic-release-monorepo

workflows:
  version: 2
  Build and Lint:
    jobs:
      - build:
          name: Build and Lint
      - publish:
          name: Publish Packages
          requires:
            - Build and Lint
          <<: *only_main
